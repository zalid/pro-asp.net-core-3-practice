@page "/admin/orders"
@inherits OwningComponentBase<IOrderRepository>

<OrderTable TableTitle="Unshipped Orders" Orders="UnshippedOrders" ButtonLabel="Ship" OrderSelected="ShipOrder" />
<OrderTable TableTitle="Shipped Orders" Orders="ShippedOrders" ButtonLabel="Reset" OrderSelected="ResetOrder" />
<button class="btn btn-info" @onclick="@(e => UpdateData())">Refresh Data</button>

@code {

    public IOrderRepository Repository => Service;

    public IEnumerable<Order> AllOrders { get; set; } = new List<Order>();
    public IEnumerable<Order> UnshippedOrders { get; set; }
    public IEnumerable<Order> ShippedOrders { get; set; }

    protected async override Task OnInitializedAsync()
        => await UpdateData();

    public async Task UpdateData()
    {
        this.AllOrders = await Repository.Orders.ToListAsync() ?? new List<Order>();
        this.UnshippedOrders = this.AllOrders.Where(o => !o.Shipped);
        this.ShippedOrders = this.AllOrders.Where(o => o.Shipped);
    }

    public void ShipOrder(int id)
        => UpdateOrder(id, true);

    public void ResetOrder(int id)
        => UpdateOrder(id, false);
    
    private void UpdateOrder(int id, bool shipValue)
    {
        var o = this.Repository.Orders.FirstOrDefault(o => o.OrderID == id);
        if(o != null)
        {
            o.Shipped = shipValue;
            this.Repository.SaveOrder(o);
        }
    }
}
