@page "/admin/products/edit/{id:long}"
@page "/admin/products/create"
@inherits OwningComponentBase<IStoreRepository>

<style>
    div.validation-message { color: rgb(220, 53, 69); font-weight: 500 }
</style>

<h3 class="bg-@ThemeColor text-white text-center p-1">@this.TitleText a Product</h3>
<EditForm Model="this.Product" OnValidSubmit="SaveProduct">
    <DataAnnotationsValidator />
    @if(this.Product.ProductID != 0)
    {
        <div class="form-group">
            <label>ID</label>
            <input class="form-control" disabled value="@this.Product.ProductID" />
        </div>
    }
    <div class="form-group">
        <label>Name</label>
        <ValidationMessage For="@(() => this.Product.Name)" />
        <InputText class="form-control" @bind-Value="this.Product.Name" />
    </div>
    <div class="form-group">
        <label>Description</label>
        <ValidationMessage For="@(() => this.Product.Description)" />
        <InputText class="form-control" @bind-Value="this.Product.Description" />
    </div>
    <div class="form-group">
        <label>Category</label>
        <ValidationMessage For="@(() => this.Product.Category)" />
        <InputText class="form-control" @bind-Value="this.Product.Category" />
    </div>
    <div class="form-group">
        <label>Price</label>
        <ValidationMessage For="@(() => this.Product.Price)" />
        <InputNumber class="form-control" @bind-Value="this.Product.Price" />
    </div>
    <button type="submit" class="btn btn-@ThemeColor">Save</button>
    <NavLink class="btn btn-secondary" href="/admin/products">Cancel</NavLink>
</EditForm>

@code {

    public IStoreRepository Repository => Service;

    [Inject]
    public NavigationManager NavManager { get; set; }

    [Parameter]
    public long Id { get; set; } = 0;

    public Product Product { get; set; } = new Product();

    protected override void OnParametersSet()
    {
        if(this.Id != 0)
        {
            this.Product = Repository.Products.FirstOrDefault(p => p.ProductID == Id);
        }
    }

    public void SaveProduct()
    {
        if(this.Id == 0)
        {
            this.Repository.CreateProduct(Product);
        } else 
        {
            this.Repository.SaveProduct(Product);
        }
        this.NavManager.NavigateTo("/admin/products");
    }

    public string ThemeColor => Id == 0 ? "primary" : "warning";
    public string TitleText => Id == 0 ? "Create" : "Edit";
}
